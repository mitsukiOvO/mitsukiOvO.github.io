{
  "data":[
    {
      "title": "操作系统的主要目标(四个)",
      "answer": "方便性、有效性、可扩充性、开放性"
    },
    {
      "title": "操作系统的基本特性（四个）",
      "answer": "并发、共享、虚拟、异步"
    },
    {
      "title": "分时操作系统的特点",
      "answer": "特征：多路性、独立性、及时性、交互性"
    },
    {
      "title": "实时操作系统的特点",
      "answer": "类型：（周期性实时任务和非周期性实时任务）（硬实时任务和软实时任务）\n特征：多路性、独立性、及时性、交互性、可靠性"
    },
    {
      "title": "微内核的优点",
      "answer": "提高的系统的可扩展性、增强了系统的可靠性、可移植性强、提供了对分布式系统的支持、融入了面向对象技术"
    },
    {
      "title": "进程的特性",
      "answer": "动态性、并发性、独立性、异步性、结构性"
    },
    {
      "title": "PCB的作用",
      "answer": "作为独立运行基本单位的标志、能实现间断性运行方式、提供进程管理所需要的信息、提供进程调度所需要的信息、实现与其他进程的同步与通信"
    },
    {
      "title": "PCB中的内容",
      "answer": "1. 进程标志符（外部标识符、内部标识符）\n2. 处理机状态（通用寄存器、指令计数器、程序状态字、用户栈指针）\n3. 进程调度信息（进程状态、进程优先级、进程调度所需要的其他信息、事件）\n4. 进程控制信息（程序和数据的地址、进程同步和通信机制、资源清单、连接指针）"
    },
    {
      "title": "引起创建进程的事件(四个)",
      "answer": "用户登录、作业调度、提供服务、应用请求"
    },
    {
      "title": "引起进程阻塞或被唤醒的事件",
      "answer": "向系统请求资源失败、等待某种操作完成、新数据尚未到达、等待新任务的到达"
    },
    {
      "title": "进程和线程比较的方向",
      "answer": "调度的基本单位、并发性、拥有资源、独立性、系统开销、支持多处理机系统"
    },
    {
      "title": "TCB中的内容",
      "answer": "线程标识符、寄存器（PC，PSW，通用寄存器）、线程运行状态、优先级、线程专有存储器（现场保护信息、统计信息）、信号屏蔽、堆栈指针"
    },
    {
      "title": "处理机调度算法的共同目标",
      "answer": "资源利用率、公平性、平衡性、策略强制执行"
    },
    {
      "title": "分时系统调度算法的目标",
      "answer": "响应时间快、均衡性"
    },
    {
      "title": "实时系统调度算法的目标",
      "answer": "截止时间的保证、可预测性"
    },
    {
      "title": "实现实时调度的基本条件",
      "answer": "提供必要的信息、系统处理能力强、采用抢占式调度机制、具有快速切换机制"
    },
    {
      "title": "产生死锁的必要条件",
      "answer": "互斥条件、请求并保持条件、不可抢占条件、循环等待条件"
    },
    {
      "title": "程序的装入方式",
      "answer": "绝对装入方式、可重定位装入方式、动态运行时的装入方式"
    },
    {
      "title": "连续分配存储管理方式",
      "answer": "单一连续分配、固定分区分配、动态分区分配"
    },
    {
      "title": "I/O系统的主要任务",
      "answer": "完成用户提出的I/O请求，提高I/O速率，提高设备的利用率，为更高层的进程方便地使用这些设备提供手段"
    },
    {
      "title": "I/O系统的基本功能",
      "answer": "隐藏物理设备的细节、与设备的无关性、提高处理机和I/O设备的利用率、对I/O设备进行控制、确保对设备的正确共享、错误处理"
    },
    {
      "title": "I/O软件的层次结构",
      "answer": "1. 用户层I/O软件：实现与用户交互的接口，用户可以调用该层所提供的、与I/O操作有关的库函数对设备的操作\n2. 设备独立性软件：实现用户程序与设备驱动器的统一接口、设备命名、设备保护以及设备的分配与释放等，同时为设备管理和数据传送提供必要的存储空间\n3. 设备驱动程序：与硬件直接相关，用于具体实现系统对设备发出的操作指令，驱动I/O设备工作的驱动程序\n4. 中断处理程序：用于保存被中断进程的CPU环境，转入响应的中断处理程序进程处理，处理完毕再恢复被中断进程的线程后，返回被中断的进程"
    },
    {
      "title": "设备控制器的基本功能",
      "answer": "接受和识别命令、数据交换、标识和报告设备的状态、地址识别、数据缓冲区、差错控制"
    },
    {
      "title": "中断处理程序的处理过程",
      "answer": "1. 测试是否有未响应的终端信号\n2. 保护被中断进程的CPU环境\n3. 转入相应的设备处理程序\n4. 中断处理\n5. 恢复CPU的现场并退出中断"
    },
    {
      "title": "设备驱动程序的功能",
      "answer": "1. 接收由与设备无关的软件发来的命令和参数，并将命令中的抽象要求转换为与设备相关的低层操作序列\n2. 检查用户I/O请求的合法性，了解I/O设备的工作状态，传递与I/O设备操作有关的参数，设置谁被的工作方式\n3. 发出I/O命令，如果设备空闲，便立即启动I/O设备，完成指定的I/O操作；如果设备忙碌，则将请求者的请求块挂在设备队列上等待\n4. 及时响应由设备控制器发来的中断请求，并根据其中断类型，调用相应的中断处理程序进行处理"
    },
    {
      "title": "设备驱动程序的特点",
      "answer": "1. 驱动程序是实现在与设备无关的软件和设备控制器之间通信和转换的程序\n2. 驱动程序与设备控制器以及I/O设备的设备特性紧密相关\n3. 驱动程序与I/O设备所采用的I/O控制方式\n4. 由于驱动程序与硬件紧密相关，因而其中的一部分必须用汇编语言书写。目前有很多驱动程序的基本部分已经固化在ROM中\n5. 驱动程序应允许可重入"
    },
    {
      "title": "设备处理方式",
      "answer": "1. 为每一类设备设置一个进程，专门用于执行这类设备的I/O操作\n2. 在整个系统中设置一个I/O进程，专门用于执行操作系统中的所有各种设备的I/O操作\n3. 不设置专门的设备处理进程，而只为各类设备设置相应的设备驱动程序，供用户或系统进程调用。（用得最多）"
    },
    {
      "title": "设备驱动程序的处理过程",
      "answer": "1. 将设备要求转换为具体要求\n2. 对服务请求进行校验\n3. 检查设备的状态\n4. 传送必要的参数\n5. 启动I/O设备"
    },
    {
      "title": "与设备无关的软件",
      "answer": "设备驱动程序的统一接口、缓冲管理、差错管理、对独立设备的分配与回收、独立于设备的逻辑数据快"
    },
    {
      "title": "设备分配时应该考虑的因素",
      "answer": "1. 设备的固有属性：独占设备、共享设备、虚拟设备\n2. 设备分配算法：先来先服务算法、优先级高者优先算法\n3. 设备分配中的安全性：安全分配方式（进程请求I/O后便阻塞）、不安全分配方式（进程请求I/O后不阻塞）"
    },
    {
      "title": "改善磁盘性能的方法",
      "answer": "1. 选择好的磁盘调度算法，减少磁盘的寻道时间\n2. 提高磁盘I/O速度，提高对文件的访问速度\n3. 采用冗余技术，提高磁盘系统的可靠性"
    },
    {
      "title": "磁盘访问时间的组成",
      "answer": "寻道时间（启动磁头臂时间s和磁头移动n条磁道所花费的时间之和）、旋转延迟时间、传输时间。（主要是寻道时间）"
    },
    {
      "title": "文件系统的层次",
      "answer": "1. 文件系统接口：命令接口和程序接口\n2. 对对象操纵和管理的软件集合：I/O控制层（设备驱动程序层）、基本文件系统层、基本I/O管理程序、逻辑文件系统\n3. 对象及其属性：文件、目录、磁盘存储空间"
    },
    {
      "title": "两级目录结构的优点''",
      "answer": "1. 提高了目录的速度\n2. 在不同的用户目录中可以使用相同的文件名\n3. 不同用户还可使用不同的文件名访问系统中的同一个共享文件\n两级目录结构隔离开了各个用户，这既是一个优点也是一个缺点，会不便于用户之间共享文件"
    },
    {
      "title": "树形目录结构的优缺点",
      "answer": "1. 目录查询速度更快\n2. 层次更加清晰\n3. 能更加有序地进行文件的管理和保护\n缺点：需要按路径名逐级访问中间节点，增加了磁盘的访问次数，影响了查询速度"
    },
    {
      "title": "为保证文件系统的安全性，可以采用的措施",
      "answer": "1. 采用存取控制机制\n2. 采取系统容错技术\n3. 采用后备系统"
    },
    {
      "title": "对磁盘存储器管理的主要任务和要求",
      "answer": "1. 有效利用存储空间\n2. 提高磁盘的I/O速度\n3. 提高磁盘系统的可靠性"
    },
    {
      "title": "提高文件访问速度的方法",
      "answer": "1. 改进文件的目录结构以及检索目录的方法来减少对目录的查找时间\n2. 选取好的文件存储结构，以提高对文件的访问速度\n3. 提高磁盘的I/O速度"
    }
  ]
}